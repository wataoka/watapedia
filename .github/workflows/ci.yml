name: Node CI

on:
  push:
    branches-ignore:
      - release/**
      - tmp/**

jobs:

  lint:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x]

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: Cache/Restore node_modules
      id: cache-dependencies
      uses: actions/cache@v2
      with:
        path: node_modules
        key: ${{ runner.OS }}-node_modules-${{ matrix.node-version }}-${{ hashFiles('**/yarn.lock') }}
    - name: Get yarn cache dir
      if: steps.cache-dependencies.outputs.cache-hit != 'true'
      id: cache-yarn
      run: echo "::set-output name=dir::$(yarn cache dir)"
    - name: Cache/Restore yarn cache
      if: steps.cache-dependencies.outputs.cache-hit != 'true'
      uses: actions/cache@v2
      with:
        path: ${{ steps.cache-yarn.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ matrix.node-version }}-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-${{ matrix.node-version }}-
    - name: Install dependencies
      if: steps.cache-dependencies.outputs.cache-hit != 'true'
      run: |
        yarn add growi-plugin-lsx growi-plugin-pukiwiki-like-linker growi-plugin-attachment-refs react-images@1.0.0 react-motion
    - name: Print dependencies
      run: |
        echo -n "node " && node -v
        echo -n "npm " && npm -v
        yarn list --depth=0
    - name: yarn lint
      run: |
        yarn lint

    - name: Slack Notification
      uses: weseek/ghaction-slack-notification@master
      if: failure()
      with:
        type: ${{ job.status }}
        job_name: '*test (${{ matrix.node-version }})*'
        channel: '#ci'
        isCompactMode: true
        url: ${{ secrets.SLACK_WEBHOOK_URL }}


  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x]

    services:
      mongodb:
        image: mongo:4.4
        ports:
        - 27017/tcp
      mongodb36:
        image: mongo:3.6
        ports:
        - 27017/tcp

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: Cache/Restore node_modules
      id: cache-dependencies
      uses: actions/cache@v2
      with:
        path: node_modules
        key: ${{ runner.OS }}-node_modules-${{ matrix.node-version }}-${{ hashFiles('**/yarn.lock') }}
    - name: Get yarn cache dir
      if: steps.cache-dependencies.outputs.cache-hit != 'true'
      id: cache-yarn
      run: echo "::set-output name=dir::$(yarn cache dir)"
    - name: Cache/Restore yarn cache
      if: steps.cache-dependencies.outputs.cache-hit != 'true'
      uses: actions/cache@v2
      with:
        path: ${{ steps.cache-yarn.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ matrix.node-version }}-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-${{ matrix.node-version }}-
    - name: Install dependencies
      if: steps.cache-dependencies.outputs.cache-hit != 'true'
      run: |
        yarn add growi-plugin-lsx growi-plugin-pukiwiki-like-linker growi-plugin-attachment-refs react-images@1.0.0 react-motion
    - name: Print dependencies
      run: |
        echo -n "node " && node -v
        echo -n "npm " && npm -v
        yarn list --depth=0
    - name: yarn test
      run: |
        yarn test
      env:
        MONGO_URI: mongodb://localhost:${{ job.services.mongodb.ports['27017'] }}/growi_test
    - name: yarn test with MongoDB 3.6
      run: |
        yarn test
      env:
        MONGO_URI: mongodb://localhost:${{ job.services.mongodb36.ports['27017'] }}/growi_test

    - name: Slack Notification
      uses: weseek/ghaction-slack-notification@master
      if: failure()
      with:
        type: ${{ job.status }}
        job_name: '*test (${{ matrix.node-version }})*'
        channel: '#ci'
        isCompactMode: true
        url: ${{ secrets.SLACK_WEBHOOK_URL }}


  build-dev:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x]

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: Cache/Restore node_modules
      id: cache-dependencies
      uses: actions/cache@v2
      with:
        path: node_modules
        key: ${{ runner.OS }}-node_modules_dev-${{ matrix.node-version }}-${{ hashFiles('**/yarn.lock') }}
    - name: Get Date
      id: date
      run: |
        echo ::set-output name=YmdH::$(date '+%Y%m%d%H')
        echo ::set-output name=Ymd::$(date '+%Y%m%d')
        echo ::set-output name=Ym::$(date '+%Y%m')
        echo ::set-output name=Y::$(date '+%Y')
    - name: Cache/Restore node_modules/.cache/hard-source
      uses: actions/cache@v2
      with:
        path: node_modules/.cache
        key: ${{ runner.OS }}-hard_source_webpack-${{ matrix.node-version }}-${{ steps.date.outputs.YmdH }}
        restore-keys: |
          ${{ runner.os }}-hard_source_webpack-${{ matrix.node-version }}-${{ steps.date.outputs.Ymd }}
          ${{ runner.os }}-hard_source_webpack-${{ matrix.node-version }}-${{ steps.date.outputs.Ym }}
          ${{ runner.os }}-hard_source_webpack-${{ matrix.node-version }}-${{ steps.date.outputs.Y }}
    - name: Get yarn cache dir
      if: steps.cache-dependencies.outputs.cache-hit != 'true'
      id: cache-yarn
      run: echo "::set-output name=dir::$(yarn cache dir)"
    - name: Cache/Restore yarn cache
      if: steps.cache-dependencies.outputs.cache-hit != 'true'
      uses: actions/cache@v2
      with:
        path: ${{ steps.cache-yarn.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-
    - name: Install dependencies
      if: steps.cache-dependencies.outputs.cache-hit != 'true'
      run: |
        yarn add growi-plugin-lsx growi-plugin-pukiwiki-like-linker growi-plugin-attachment-refs react-images@1.0.0 react-motion
    - name: Print dependencies
      run: |
        echo -n "node " && node -v
        echo -n "npm " && npm -v
        yarn list --depth=0
    - name: yarn build:dev
      run: |
        yarn build:dev

    - name: Slack Notification
      uses: weseek/ghaction-slack-notification@master
      if: failure()
      with:
        type: ${{ job.status }}
        job_name: '*build-dev (${{ matrix.node-version }})*'
        channel: '#ci'
        isCompactMode: true
        url: ${{ secrets.SLACK_WEBHOOK_URL }}


  build-prod:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x, 14.x]

    services:
      mongodb:
        image: mongo:4.4
        ports:
        - 27017/tcp
      mongodb36:
        image: mongo:3.6
        ports:
        - 27017/tcp

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: Get Date
      id: date
      run: |
        echo ::set-output name=YmdH::$(date '+%Y%m%d%H')
        echo ::set-output name=Ymd::$(date '+%Y%m%d')
        echo ::set-output name=Ym::$(date '+%Y%m')
        echo ::set-output name=Y::$(date '+%Y')
    - name: Cache/Restore node_modules
      uses: actions/cache@v2
      with:
        path: node_modules
        key: ${{ runner.OS }}-node_modules_prod-${{ matrix.node-version }}-${{ steps.date.outputs.YmdH }}
        restore-keys: |
          ${{ runner.os }}-node_modules_prod-${{ matrix.node-version }}-${{ steps.date.outputs.Ymd }}
          ${{ runner.os }}-node_modules_prod-${{ matrix.node-version }}-${{ steps.date.outputs.Ym }}
          ${{ runner.os }}-node_modules_prod-${{ matrix.node-version }}-${{ steps.date.outputs.Y }}
    - name: Get yarn cache dir
      id: cache-yarn
      run: echo "::set-output name=dir::$(yarn cache dir)"
    - name: Cache/Restore yarn cache
      uses: actions/cache@v2
      with:
        path: ${{ steps.cache-yarn.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-
    - name: Install dependencies
      run: |
        yarn add growi-plugin-lsx growi-plugin-pukiwiki-like-linker growi-plugin-attachment-refs
        yarn add -D react-images@1.0.0 react-motion
    - name: Print dependencies
      run: |
        echo -n "node " && node -v
        echo -n "npm " && npm -v
        yarn list --depth=0
    - name: yarn build:prod:analyze
      run: |
        yarn build:prod:analyze
    - name: yarn install --production
      run: |
        yarn install --production
    - name: Print dependencies
      run: |
        echo -n "node " && node -v
        echo -n "npm " && npm -v
        yarn list --production --depth=0
    - name: Get DB name
      id: getdbname
      run: |
        echo ::set-output name=suffix::$(echo '${{ matrix.node-version }}' | sed s/\\.//)
    - name: yarn server:prod:ci
      run: |
        yarn server:prod:ci
      env:
        MONGO_URI: mongodb://localhost:${{ job.services.mongodb.ports['27017'] }}/growi-${{ steps.getdbname.outputs.suffix }}
    - name: yarn server:prod:ci with MongoDB 3.6
      run: |
        yarn server:prod:ci
      env:
        MONGO_URI: mongodb://localhost:${{ job.services.mongodb36.ports['27017'] }}/growi-${{ steps.getdbname.outputs.suffix }}
    - name: Upload report as artifact
      uses: actions/upload-artifact@v2
      with:
        name: Report
        path: report

    - name: Slack Notification
      uses: weseek/ghaction-slack-notification@master
      if: failure()
      with:
        type: ${{ job.status }}
        job_name: '*build-prod (${{ matrix.node-version }})*'
        channel: '#ci'
        isCompactMode: true
        url: ${{ secrets.SLACK_WEBHOOK_URL }}
